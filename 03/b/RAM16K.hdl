// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[0..1], a=aD, b=bD, c=cD, d=dD);
    RAM4K(in=in, load=aD, address=address[2..13], out=aM);
    RAM4K(in=in, load=bD, address=address[2..13], out=bM);
    RAM4K(in=in, load=cD, address=address[2..13], out=cM);
    RAM4K(in=in, load=dD, address=address[2..13], out=dM);
    Mux4Way16(a=aM, b=bM, c=cM, d=dM, sel=address[0..1], out=out);
    // Put your code here:
}