// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=aD, b=bD, c=cD, d=dD, e=eD, f=fD, g=gD, h=hD);
    RAM512(in=in, load=aD, address=address[3..11], out=aM);
    RAM512(in=in, load=bD, address=address[3..11], out=bM);
    RAM512(in=in, load=cD, address=address[3..11], out=cM);
    RAM512(in=in, load=dD, address=address[3..11], out=dM);
    RAM512(in=in, load=eD, address=address[3..11], out=eM);
    RAM512(in=in, load=fD, address=address[3..11], out=fM);
    RAM512(in=in, load=gD, address=address[3..11], out=gM);
    RAM512(in=in, load=hD, address=address[3..11], out=hM);
    Mux8Way16(a=aM, b=bM, c=cM, d=dM, e=eM, f=fM, g=gM, h=hM, sel=address[0..2], out=out);
    // Put your code here:
}